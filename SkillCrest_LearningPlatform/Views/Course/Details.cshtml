@using SkillCrest_LearningPlatform.Services.Interfaces
@inject IBaseService baseService

@model CourseDetailsViewModel


<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.84.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"> 
    <style>
        body {
            padding-bottom: 100px; 
        }
    </style>
</head>
<body>
    <main class="container mt-4">
        <h1>Lessons</h1>
        <input type="hidden" name="courseId" value="@Model.Id" />
        <input type="hidden" name="creatorId" value="@Model.CreatorId" />
        <a type="button" class="btn btn-primary" asp-action="Users" asp-controller="Course" asp-route-courseId="@Model.Id">Users in course</a>
        @if (Model.Quizzes.Count > 0)
        {

            foreach(var quiz in Model.Quizzes){
                 <div class="bg-light p-5 rounded mb-3">
                    <h2>@quiz.Title</h2>
                @if(quiz.IsSubmitted == false){
                    <a type="button" class="btn btn-primary" asp-action="Solve" asp-controller="Quiz" asp-route-Id="@quiz.Id">Solve Quiz</a>
                   
                }
                else
                {
                        <p>You scored @quiz.Score points out of @quiz.TotalScore.</p>
                   
                }
                    @if (User.IsInRole("Teacher") && Model.CreatorId == baseService.GetUserId().ToString())
                    {
                    <a type="button" class="btn btn-info" asp-action="QuizSubmissions" asp-controller="Statistics" asp-route-quizId="@quiz.Id">Submissions</a>

                    }
                </div>
                 }
                
        }
        @if (Model.Lessons.Count > 0)
        {
            foreach (var lesson in Model.Lessons)
            {
                <div class="bg-light p-5 rounded mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="mb-0">@lesson.Title</h2>

                        <div>
                            @if (!lesson.IsCompleted)
                            {
                                <form action="/Lesson/ToggleLessonCompletion" method="post" class="d-inline-block lesson-completion-form" data-lesson-id="@lesson.Id">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="lessonId" value="@lesson.Id" />
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-success me-2" aria-checked="@lesson.IsCompleted.ToString().ToLower()">
                                        <i class="fa-eye"></i> Mark as Complete
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form action="/Lesson/MarkAsIncomplete" method="post" class="d-inline-block lesson-completion-form" data-lesson-id="@lesson.Id">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="lessonId" value="@lesson.Id" />
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-warning me-2" aria-checked="@lesson.IsCompleted.ToString().ToLower()">
                                        <i class="fa-eye-slash"></i> Mark as Incomplete
                                    </button>
                                </form>
                            }
                            @if ((User.IsInRole("Teacher") && User?.Identity?.Name == lesson.Creator) || await baseService.IsAdmin())
                            {
                                <a type="button" class="btn btn-primary me-2" asp-action="Edit" asp-controller="Lesson" asp-route-lessonId="@lesson.Id">Edit</a>
                                <a type="button" class="btn btn-danger" asp-action="Delete" asp-controller="Lesson" asp-route-lessonId="@lesson.Id">Delete</a>
                            }
                        </div>
                    </div>

                    <p class="lead mt-3">@lesson.Description</p>
                    <div class="d-flex justify-content-start">
                        <div>
                            <a type="button" class="btn btn-primary me-2" asp-action="Details" asp-controller="Lesson" asp-route-id="@lesson.Id">Details</a>
                            @if ((User.IsInRole("Teacher") && User?.Identity?.Name == lesson.Creator) || await baseService.IsAdmin())
                            {
                                <a type="button" class="btn btn-info" asp-action="LessonSubmissions" asp-controller="Statistics" asp-route-lessonId="@lesson.Id">Submissions</a>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No lessons yet!</p>
        }
        @if ((User.IsInRole("Teacher") && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.CreatorId) || await baseService.IsAdmin())
        {
            <div class="text-center mt-4">
                <a type="button" class="btn btn-primary" asp-action="Create" asp-controller="Lesson" asp-route-courseId="@Model.Id">Click to create new assignment.</a>
                <a type="button" class="btn btn-primary" asp-action="Create" asp-controller="Quiz" asp-route-courseId="@Model.Id">Click to create new quiz.</a>
            </div>
        }
        <a type="button" class="btn btn-primary" asp-action="Leave" asp-controller="Course" asp-route-courseId="@Model.Id.ToString()">Leave Course</a>
    </main>
    <script src="../assets/dist/js/bootstrap.bundle.min.js"></script> 
</body>
</html>
